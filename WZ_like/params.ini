[runtime]
sampler =multinest
#emcee or multinest
#test
root = ${COSMOSIS_SRC_DIR}
#pre_script=./pre_script.sh


[output]
filename= ./chain_output_shape.txt
format=text
lock=F
privacy=F





[DEFAULT]
BASELINE_DIR= ./
DATAVECTOR_DIR= ./
2PT_FILE = /global/homes/m/mgatti/clustering-z/cosmosis/run_cosmosis_4_5.fits
2PT_DATA_SETS = wtheta
RUN_NAME = ERROR
; use as the last item in the pipeline to switch between 2pt_like and save_2pt
ACTION = wz_like



[wz_like]
file = /global/homes/m/mgatti/clustering-z/CORE/WZ_like/WZ_like.py 
measured_wz = /global/homes/m/mgatti/clustering-z/WZ_cosmosis1
bins_to_be_included = 1.0 2.0 3.0
sample_lens = nz_lens
sample_wl = nz_source
#magnif = True means subtracting magnif from Nz
magnif = True
mean_rm = False
mean_eboss = False
std_rm = False
full_shape = True

[multinest]
max_iterations=50000
multinest_outfile_root=./mmn/mmn
resume=T
# Testing with Posteriors only: These settings are very fast (~6h, 128 cores)
# and produce reasonably good posteriors, but completely unreliable evidences. 
# Useful for very preliminary results and debugging:
#max_iterations=50000
#live_points=500
update_interval=50
live_points=250
efficiency=0.3
tolerance=0.01
constant_efficiency=F


[emcee]
walkers = 100
samples = 50
nsteps = 5


[test]
save_dir=%(RUN_NAME)s/test_${DATAFILE}_%(RUN_NAME)s
fatal_errors=T

[pipeline]
modules = consistency camb halofit extrapolate fits_nz lens_photoz_bias fast_pt source_photoz_bias unbiased_galaxies IA %(ACTION)s 
likelihoods= wz
quiet=F
timing=T
debug=T
priors = ./priors.ini
values =  ./value.ini
extra_output = cosmological_parameters/sigma_8

#pk_to_cl_gg pk_to_cl add_magnification add_intrinsic add_eb shear_m_bias shear_2pt_eplusb shear_2pt_eminusb choose_xip 2pt_gal 2pt_gal_shear 

#  nz_lens



 

[ratio_like]
file = /home/jprat/shearratio/ratio_likelihood/ratio_likelihood.py
save_ratio_filename = none
measured_ratio_filename = /home/jprat/shearratio/ratio_likelihood/buzzard_ratios_l3_1.npy
gglensing_section = galaxy_shear_xi
th_limit_low = 2.5 2.5 2.5 2.5 2.5
th_limit_high = 34.0 21.0 16.0 13.0 10.0
lens_bins = 3


[bin_bias]
file = cosmosis-standard-library/bias/binwise_bias/bin_bias.py
perbin=T

[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=4
kmin=1e-5
kmax=10.0
nk=400

[halofit]
file = cosmosis-standard-library/boltzmann/halofit_takahashi/halofit_interface.so
nk=700

[extrapolate]
file = cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax = 500.

[fits_nz]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(2PT_FILE)s
data_sets = lens source
prefix_section = T
prefix_extension = T

#the two modules below might be replaced in the future by a different parametrization
[lens_photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_lens
bias_section = lens_photoz_errors
interpolation = linear

[source_photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_source
bias_section = wl_photoz_errors
interpolation = linear

[unbiased_galaxies]
file = cosmosis-standard-library/bias/no_bias/no_bias.py
use_lin_power = False


[IA_old]
#linear_alignments_interface.py
file=cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
method=bk_corrected
do_galaxy_intrinsic=T

[IA]
file=${COSMOSIS_SRC_DIR}/cosmosis-des-library/IAs/tatt/tatt_interface.py
mode=all
sub_lowk=F
sub_const=F
include_s2_terms=F
do_galaxy_intrinsic=F
ia_model=tatt


[ia_z_field]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/intrinsic_alignments/z_powerlaw/ia_z_powerlaw.py
do_galaxy_intrinsic = T

[pk_to_cl]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min_logspaced = 0.1
ell_max_logspaced = 5.0e5
; n_ell_logspaced = 400
n_ell_logspaced = 100
shear-shear = source-source
shear-intrinsic = source-source
intrinsic-intrinsic = source-source
intrinsicb-intrinsicb=source-source
lingal-shear = lens-source
lingal-intrinsic = lens-source
lingal-magnification = lens-lens
magnification-shear = lens-source
magnification-magnification = lens-lens
magnification-intrinsic = lens-source 

verbose = F
get_kernel_peaks = F
sig_over_dchi = 20.
shear_kernel_dchi = 10.

[pk_to_cl_gg]
file = cosmosis-standard-library/structure/projection/project_2d.py
lingal-lingal = lens-lens
do_exact = lingal-lingal
do_rsd = True
ell_min_linspaced = 0
; ell_min_linspaced=1
ell_max_linspaced = 4
; ell_max_linspaced=9
n_ell_linspaced = 5
; n_ell_linspaced=10
; ell_min_logspaced=10.
; ell_max_logspaced=1.e5
ell_min_logspaced = 5.
ell_max_logspaced = 5.e5
n_ell_logspaced = 80
; n_ell_logspaced=150
limber_ell_start = 200
; limber_ell_start=201
ell_max_logspaced=1.e5
auto_only=lingal-lingal
sig_over_dchi_exact = 3.5

[add_magnification]
file = cosmosis-standard-library/structure/projection/add_magnification.py
include_intrinsic=T

[add_intrinsic]
file=cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py
shear-shear=T
position-shear=T
perbin=F

[add_eb]
file = cosmosis-des-library/IAs/add_bmode_cl/add_bmode_cl.py


[choose_xip]
file = cosmosis-standard-library/utility/tools/copy_section.py
# copy shear_xi_eplusb_plus->shear_xi_plus
# and  shear_xi_eminusb_minus->shear_xi_minus
source =  shear_xi_eplusb_plus   shear_xi_eminusb_minus
dest =    shear_xi_plus          shear_xi_minus

[fast_pt]
file = ${COSMOSIS_SRC_DIR}/cosmosis-des-library/tcp/fast_pt/fast_pt_interface.py
do_ia = T
k_res_fac = 0.5
verbose = F

[shear_m_bias]
file = cosmosis-standard-library/shear/shear_bias/shear_m_bias.py
m_per_bin = True
verbose = F

[shear_2pt_eplusb]
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='22'
theta_file=%(2PT_FILE)s
bin_avg = T
input_section_name = shear_cl_eplusb
output_section_name = shear_xi_eplusb

[shear_2pt_eminusb]
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='22'
theta_file=%(2PT_FILE)s
bin_avg = T
input_section_name = shear_cl_eminusb
output_section_name = shear_xi_eminusb


[2pt_gal]
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='00'
theta_file=%(2PT_FILE)s
bin_avg = T

[2pt_gal_shear]
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='02'
theta_file=%(2PT_FILE)s
bin_avg = T


[2pt_like]
file = cosmosis-standard-library/likelihood/2pt/2pt_like_allmarg.py
do_pm_marg = True
data_file = %(2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
make_covariance=F
covmat_name=COVMAT
#%include scale_cuts/${SCALE_CUTS}


[save_2pt]
file = cosmosis-standard-library/likelihood/2pt/save_2pt.py
theta_min = 2.5
theta_max = 250.0
n_theta = 20
real_space = T
make_covariance = F
shear_nz_name = nz_source
position_nz_name = nz_lens
filename = data_vectors/sim_%(RUN_NAME)s.fits
overwrite = T
auto_only = galaxy_xi
;cut_wtheta = 1,2 1,3 2,3 1,4 2,4 3,4 1,5 2,5 3,5 4,5
spectrum_sections = shear_xi_plus shear_xi_minus galaxy_shear_xi galaxy_xi
output_extensions = xip xim gammat wtheta
two_thirds_midpoint = T
copy_covariance=data_vectors/${DATAFILE}



[sim_fits_nz_lens]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = nz_inputs/nz_y3_redmagic_v6.4.22_v2_gold_2.2.1_combined_max_bin_edges.fits
data_sets = lens
prefix_section = T
prefix_extension = T

[sim_fits_nz_source]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = nz_inputs/barcelona_lens1.fits
data_sets = source
prefix_section = T
prefix_extension = T